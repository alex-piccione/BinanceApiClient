trigger:
- master

pool:
  # pre/post build commands require Windows machine
  vmImage: 'windows-latest'

variables:
  base version: "0.5"
  project file: "Alex75.BinanceApiClient/Alex75.BinanceApiClient.fsproj"
  package version: $(Version.MajorMinor).$(Build.BuildNumber)

jobs:

#- job: GetVersion
#  steps:
#    - bash: echo "Get the project Main.Minor version"
#    - task: tmarkovski.projectversionasvariable.versionintovariable.projectversionasvariable@1
#      displayName: 'Get Project Version as variables from $(project file)'
#      inputs:
#        path: '$(project file)'

#- job: Check Version
#  dependsOn: GetVersion
#  steps:
#    - bash: echo "Build the solution $(package version)"

- job: Build
  steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs: 
        command: build
        projects: "$(project file)"
        arguments: --configuration Release 

- job: Test
  dependsOn: Build
  steps: 
    - task: DotNetCoreCLI@2
      displayName: Tests
      inputs:
        command: test
        projects: "**/*Tests.*proj"
        arguments: >
          --configuration Release 
          --filter "TestCategory!=AFFECT_BALANCE & TestCategory!=REQUIRE_API_KEY""

- job: package
  dependsOn: Test
  variables: 
  - name: version
    value: "$(base version).$(Build.BuildNumber)"
  steps: 
    - task: DotNetCoreCLI@2
      displayName: "Create package"
      inputs:
        command: pack
        packagesToPack: "$(project file)"
        versioningScheme: byEnvVar
        versionEnvVar: "version"

    - bash: echo "Created package version $(version)"

    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'Nuget Alex75'